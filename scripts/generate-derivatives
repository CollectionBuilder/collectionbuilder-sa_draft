#!/bin/bash

THUMBS_SIZE=${THUMBS_SIZE:-"300x300"}
SMALL_SIZE=${SMALL_SIZE:-"800x800"}
MISSING=${MISSING:-"true"}

if [ "$#" -lt 1 ]; then
    echo "usage: `basename $0` OBJECTS_DIR"
    exit 1
fi

# Trim any trailing slash from the objects dir path.
OBJECTS_DIR=`pwd`/${1%/}
THUMBS_DIR=$OBJECTS_DIR/thumbs
SMALL_DIR=$OBJECTS_DIR/small

# Create the required subdirectories as necessary.
for SUB_DIR in "$THUMBS_DIR" "$SMALL_DIR"; do
    if [ ! -d "$SUB_DIR" ]; then
        mkdir $SUB_DIR;
        echo "Created: $SUB_DIR";
    fi
done

# Generate derivatives.
for F_PATH in $OBJECTS_DIR/*; do
    # Get the filename extension.
    EXT=${F_PATH##*.}
    # Lowercase the extension.
    EXT=${EXT,,}

    # Determine the file type based on the extension.
    F_TYPE="unsupported"
    if [ "$EXT" = "jpg" ]; then
        F_TYPE="image"
    elif [ "$EXT" = "pdf" ]; then
        F_TYPE="pdf"
    fi

    if [ "$F_TYPE" = "unsupported" ]; then
        if [ -f "$F_PATH" ]; then
            # Notify of unsupported normal file (not directory) paths.
            echo "Skipping file with unsupported extension: $F_PATH";
        fi
        continue;
    fi

    # Define the file-type-specific command prefix.
    if [ "$F_TYPE" = "image" ]; then
        MAGICK_CMD="magick $F_PATH"
    elif [ "$F_TYPE" = "pdf" ]; then
        MAGICK_CMD="magick $F_PATH[0]"
    fi

    # Get th filename without any leading path and extension.
    BASE_F_NAME=`basename -s .$EXT $F_PATH`

    # Generate the thumb image.
    THUMB_F="$THUMBS_DIR/${BASE_F_NAME}_th.jpg"
    if [ "$MISSING" != "true" ] || [ ! -f "$THUMB_F" ]; then
        echo "Creating: $THUMB_F";
        $MAGICK_CMD -resize $THUMBS_SIZE -flatten $THUMB_F;
    fi

    # Generate the thumb image.
    SMALL_F="$SMALL_DIR/${BASE_F_NAME}_sm.jpg"
    if [ "$MISSING" != "true" ] || [ ! -f "$SMALL_F" ]; then
        echo "Creating: $SMALL_F";
        $MAGICK_CMD -resize $SMALL_SIZE -flatten $SMALL_F;
    fi
done
